// BisectionAndNuton.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>
#include "Bisection.h"

int main()
{
    // Initial values assumed
    std::cout << "##############################################" << std::endl;
    std::cout << "The best solution of 3d lab by Tikhon Sakharov" << std::endl;
    std::cout << "##############################################\n\n" << std::endl;
    double a = -3.1, b = -2.95;
    //double firstApproximation = Bisection(a, b);
   // std::cout << "The value of root by Bisection is : " << Bisection(a, b) << "\n" << "--------------------------------------------" << std::endl;
    //Newton(firstApproximation);  std::cout << "--------------------------------------------" << std::endl;
    //simpleIteration(firstApproximation); std::cout << "--------------------------------------------" << std::endl;
    
    double* x = new double[2];
    x[0] = -1.0;
    x[1] = -1.0;

    systemNewton(x); std::cout << "--------------------------------------------" << std::endl;
    systemSimIteration(x);
    return 0;
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
